# Change prefix key to `
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# count from 1
set -g base-index 1

# Escape timeout to help with neovim
set-option -sg escape-time 10
# renumber windows when a window is closed
set -g renumber-windows on

bind r source-file ~/.config/tmux/tmux.conf # \; display-message "Config reloaded..."

bind-key -n C-1 select-pane -t 1

# Alt + l/h for cycling through windows without prefix key
bind-key -n M-l next-window
bind-key -n M-h previous-window
bind-key -n M-Tab next-window

# Window split key bindings - also open new pane in same as current pane directory
bind | split-window -h -c '#{pane_current_path}'
bind _ split-window -v -c '#{pane_current_path}'
bind c new-window -c '#{pane_current_path}'

# Window naming to current path
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{b:pane_current_path}'

# Moving panes and windows with tree chooser
bind-key W choose-tree -Zw "swap-window -t '%%'"
bind-key P choose-tree -Zw "swap-pane -t '%%'"
bind-key C-p choose-tree -Zw "move-pane -t '%%'"

# Moving panes and windows with help text prompt
bind-key C-M-w command-prompt -p "Swap current window to? (e.g. 3; 4; session_name:5)" "swap-window -t '%%'"
bind-key C-M-p command-prompt -p "Swap current pane to? (e.g. 2.0; session_name:4.0)" "swap-pane -t '%%'"
bind-key M-p command-prompt -p "Move current pane to? (e.g. 3.1; session_name:6.0)" "move-pane -t '%%'"

# Pane navigation with hjkl
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Pane resizing
bind -r < resize-pane -L 1 # Ctrl+b, Shift+,
bind -r > resize-pane -R 1 # Ctrl+b, Shift+.
bind -r - resize-pane -D 1 # Ctrl+b, -
bind -r + resize-pane -U 1 # Ctrl+b, Shift+=

# Use vi key bindings in copy mode
set-window-option -g mode-keys vi

# Enable mouse support including pane focusing and selection support.
set -g mouse on
unbind-key -Tcopy-mode-vi MouseDragEnd1Pane
bind-key -Tcopy-mode-vi MouseDown1Pane send -X clear-selection

bind-key Escape copy-mode
# Use Vim style commands for copy and paste
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi V send-keys -X select-line

###### Plugins ######

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'catppuccin/tmux'

run '~/.tmux/plugins/tpm/tpm'

###### Design ######

set -g @continuum-restore 'on'
set -g @catppuccin_flavour 'mocha'

set -g status-position top
set -ga status-right '#[fg=#b4befe,bold,bg=#1e1e2e]%a %Y-%m-%d ó±‘’ %H:%M (Syd#(TZ="Australia/Sydney" date +%%l:%%M%%p))'
set-option -sa terminal-overrides ",xterm*:Tc"

