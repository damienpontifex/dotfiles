# Change prefix key to `
set -g prefix C-a
bind C-a send-prefix

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Mouse scrolling
set -g mouse on
# Use fn key to allow normal mouse selection on macOS

# count from 1
set -g base-index 1

# Escape timeout to help with neovim
set-option -sg escape-time 10
# renumber windows when a window is closed
set -g renumber-windows on

bind r source-file ~/.config/tmux/tmux.conf # \; display-message "Config reloaded..."

bind-key -n C-1 select-pane -t 1

# Alt + l/h for cycling through windows without prefix key
bind-key -n M-l next-window
bind-key -n M-h previous-window
bind-key -n M-Tab next-window

# Commonly use ctrl+n for cycling through commands so this became a pain
# bind-key -n C-n new-window # New window with ctrl+n

# Window split key bindings - also open new pane in same as current pane directory
bind | split-window -h -c '#{pane_current_path}'
bind _ split-window -v -c '#{pane_current_path}'
bind c new-window -c '#{pane_current_path}'

# Window naming to current path
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{b:pane_current_path}'

# Moving panes and windows with tree chooser
bind-key W choose-tree -Zw "swap-window -t '%%'"
bind-key P choose-tree -Zw "swap-pane -t '%%'"
bind-key C-p choose-tree -Zw "move-pane -t '%%'"

# Moving panes and windows with help text prompt
bind-key C-M-w command-prompt -p "Swap current window to? (e.g. 3; 4; session_name:5)" "swap-window -t '%%'"
bind-key C-M-p command-prompt -p "Swap current pane to? (e.g. 2.0; session_name:4.0)" "swap-pane -t '%%'"
bind-key M-p command-prompt -p "Move current pane to? (e.g. 3.1; session_name:6.0)" "move-pane -t '%%'"

# Pane navigation with hjkl
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Pane resizing
bind -r < resize-pane -L 1 # Ctrl+b, Shift+,
bind -r > resize-pane -R 1 # Ctrl+b, Shift+.
bind -r - resize-pane -D 1 # Ctrl+b, -
bind -r + resize-pane -U 1 # Ctrl+b, Shift+=

# Use vi key bindings in copy mode
set-window-option -g mode-keys vi

# Enable mouse support including pane focusing and selection support.
set -g mouse on
unbind-key -Tcopy-mode-vi MouseDragEnd1Pane
bind-key -Tcopy-mode-vi MouseDown1Pane send -X clear-selection

bind-key Escape copy-mode
# Use Vim style commands for copy and paste
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi V send-keys -X select-line

# Copy tmux selection to system clipboard. Different mechanisms are needed for
# Linux and Mac. Allow both Enter and 'y' (for yank) to signify end selection.
 if-shell 'uname | grep -q Linux' \
   'bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "xsel --clipboard"' 
 if-shell 'uname | grep -q Linux' \
   'bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "xsel --clipboard"' 
if-shell 'uname | grep -q Darwin' \
  'bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel  "pbcopy"' 
if-shell 'uname | grep -q Darwin' \
  'bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "pbcopy"' 

# Install tmux plugins
set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-cpu'

###### Design ######

# set -g window-active-style bg=colour237,fg=colour255
# set -g window-style bg='#2F343F',fg='#2F343F'
set -g pane-border-style fg=colour59
set -g pane-active-border-style fg=cyan
set -g status-style bg='#2F343F',fg=default
# set -g window-status-style bg=default,fg=default
set -g window-status-current-style bg=red,fg=default

# Change TERM to indicate 256-color support
# set -g default-terminal screen-256color 

if-shell '[ "$(uname | grep -q Darwin && defaults read -g AppleInterfaceStyle)" != "Dark" ]' \
    'source-file ~/.tmux-light.conf'

# Status setup
set -g status-justify centre
set -g status-interval 5

# Right segment
set -g status-right '%a %h-%d %H:%M '

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
