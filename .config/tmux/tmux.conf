# Rebind prefix key to Ctrl+a
unbind C-b
set-option -g prefix C-a
bind C-a send-prefix

# Start all numbering from 1 instead of 0
set-option -g base-index 1
set-option -g pane-base-index 1
set -g detach-on-destroy off

# renumber windows when a window is closed
set-option -g renumber-windows on

# True colours support
set-option -g default-terminal "${TERM}"
set -sg terminal-overrides ",*:RGB"
# set-option -sa terminal-overrides ",xterm*:Tc"

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

set-option -g focus-events on

# Escape timeout to help with neovim
set-option -sg escape-time 10

# Pane resizing
bind -r < resize-pane -L 1 # Ctrl+b, Shift+,
bind -r > resize-pane -R 1 # Ctrl+b, Shift+.
bind -r - resize-pane -D 1 # Ctrl+b, -
bind -r + resize-pane -U 1 # Ctrl+b, Shift+=

# Use vi key bindings in copy mode
set-window-option -g mode-keys vi

# Enable mouse support including pane focusing and selection support.
set-option -g mouse on
unbind-key -Tcopy-mode-vi MouseDragEnd1Pane
bind-key -Tcopy-mode-vi MouseDown1Pane send -X clear-selection

# Increase history limit so we have a larger scrollback buffer
set-option -g history-limit 100000
# tmux messages are displayed for 4 seconds
set-option -g display-time 4000

# Terminal title display
set-option -g set-titles on
set-option -g set-titles-string "#{session_name}"
# set-option -g set-titles-string "#{session_name} - #{host}"

bind-key Escape copy-mode
# Use Vim style commands for copy and paste
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi V send-keys -X select-line

########################
###### Navigation ######
########################
# Alt + l/h for cycling through windows without prefix key
bind-key -n M-l next-window
bind-key -n M-h previous-window
# bind-key -n M-Tab next-window

# Ctrl+Shift+Left/Right to move window left/right and select it
bind-key -n C-S-Left swap-window -t -1\; select-window -t -1
bind-key -n C-S-Right swap-window -t +1\; select-window -t +1

# Window split key bindings and open new pane in same as current pane directory
bind | split-window -h -c '#{pane_current_path}'
# Split horizontally with a 20% width if only there is no other horizontally split panes, otherwise split normally
# bind | if-shell '[ "$(tmux list-panes -F "#{pane_width}" | sort -u | wc -l)" -eq 1 ]' \
#     "split-window -h -l 30% -c '#{pane_current_path}'" \
#     "split-window -h -c '#{pane_current_path}'"
bind _ split-window -v -c '#{pane_current_path}'
bind c new-window -c '#{pane_current_path}'

# Moving panes and windows with tree chooser
bind-key W choose-tree -Zw "swap-window -t '%%'"
bind-key P choose-tree -Zw "swap-pane -t '%%'"
bind-key C-p choose-tree -Zw "move-pane -t '%%'"

# Moving panes and windows with help text prompt
bind-key C-M-w command-prompt -p "Swap current window to? (e.g. 3; 4; session_name:5)" "swap-window -t '%%'"
bind-key C-M-p command-prompt -p "Swap current pane to? (e.g. 2.0; session_name:4.0)" "swap-pane -t '%%'"
bind-key M-p command-prompt -p "Move current pane to? (e.g. 3.1; session_name:6.0)" "move-pane -t '%%'"

# Pane navigation with hjkl
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R
############################
###### Display Popups ######
############################
bind-key C-z display-popup -w 80% -h 80% -E 'nvim ~/.zshrc'
bind-key C-t display-popup -d '#{pane_current_path}' -E zsh
bind-key C-g display-popup -w 80% -h 80% -d '#{pane_current_path}' -E lazygit
bind-key C-c display-popup -w 80% -h 80% -d '#{pane_current_path}' -E # New shell until exij

###### Plugins ######
set -g @continuum-restore 'on'
set -g @continuum-boot 'on'
set -g @continuum-boot-options 'iterm'
set -g @resurrect-processes 'false'

set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
# set -g @plugin "tony-sol/tmux-kubectx"
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'catppuccin/tmux#v2.1.3'

bind r source-file ~/.config/tmux/tmux.conf \; display-message "Config reloaded..."

set -g @resurrect-strategy-nvim 'session'

###### Design ######
# To see current option value
# show-option -g <option>
set -g status-position bottom
# Show the window list centered between the left and the right section
set -g status-justify absolute-centre

set -g @catppuccin_flavor 'macchiato'
set -g @catppuccin_window_status_style 'rounded'

set -g status-left-length 40
set -g status-right-length 100
set -gF status-right "#{E:@catppuccin_status_cpu}#{E:@catppuccin_status_battery}#{E:@catppuccin_status_date_time}"
set -g status-left "#{E:@catppuccin_status_session}"

# set -g @catppuccin_kube_context_color "#{@thm_red}"
# set -g @catppuccin_kube_namespace_color "#{@thm_sky}"
# set -agF status-right "#{E:@catppuccin_status_kube}"

# set -g @catppuccin_window_middle_separator " █"
# set -g @catppuccin_window_number_position "right"
# set -g @catppuccin_window_default_fill "number"
# set -g @catppuccin_window_default_text "#W"
# set -g @catppuccin_window_current_fill "number"
# set -g @catppuccin_window_current_text "#W#{?window_zoomed_flag,(),}"
# set -g @catppuccin_status_modules_right "directory date_time"
# set -g @catppuccin_status_modules_left "session"
# set -g @catppuccin_status_right_separator_inverse "no"
# set -g @catppuccin_status_fill "icon"
# set -g @catppuccin_status_connect_separator "no"

set -g @catppuccin_pane_default_text "#{b:pane_current_path}"
set -g @catpuccin_pane_number_position "left"
set -g @catppuccin_window_current_text " #{window_name}"
set -g @catppuccin_window_text " #{window_name}"

# set -g @catppuccin_directory_text "#{b:pane_current_path}

# set -g window-status-format "·"
# set -g window-status-current-format "#[bg=#15825D] 󰈙 #I: #W "
# set -g window-status-separator '|'
# window-status-format "#I:#W#{?window_flags,#{window_flags}, }"

set -g pane-border-lines double
# set -g pane-border-style fg=#444444
# set -g pane-active-border-style fg=#0087ff,bold
set -g pane-border-status top
set -g pane-border-format ' #P: #{pane_current_command} '

# Window naming to current path
set -g status-interval 5
set -g automatic-rename on
# set -g automatic-rename-format '#{b:pane_current_path} j{?window_zoomed_flag,#[fg=red]Z,}'

# • When in nvim: show pane_current_path [nvim]
# • When nothing is running (shell): show pane_current_path
# • Otherwise: show pane_current_command
set -g automatic-rename-format '\
#{?#{==:#{pane_current_command},nvim},#{b:pane_current_path} [nvim],\
#{?#{==:#{pane_current_command},zsh},#{b:pane_current_path},#{pane_current_command}}\
}\
#{?window_zoomed_flag,#[fg=red]Z,}'

# Show the git repository name in the window title if available, otherwise show the current path.
# set -g automatic-rename-format '#( \
#   basename $(git -C "#{pane_current_path}" rev-parse --show-toplevel 2>/dev/null) 2>/dev/null || \
#   basename "#{pane_current_path}" \
# )'

set -g @plugin 'tmux-plugins/tpm'
run '~/.tmux/plugins/tpm/tpm'
