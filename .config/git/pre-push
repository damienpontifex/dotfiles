#!/usr/bin/env bash

# An example hook script to verify what is about to be pushed.  Called by "git
# push" after it has checked the remote status, but before anything has been
# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local oid> <remote ref> <remote oid>

set -euo pipefail

# remote="$1"
# url="$2"

echoerr() { echo "$@" 1>&2; }

zero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')

check_api=
check_ui=

while read local_ref local_oid remote_ref remote_oid; do

  if [[ "$local_oid" = "$zero" ]]; then
    # Deleting branch - no-op pre-push checks
    exit 0
  fi

  if [[ "$remote_oid" = "$zero" ]]; then
    # New branch, examine all commits
    range="$local_oid"
  else
    # Update to existing branch, examine new commits
    range="$remote_oid..$local_oid"
  fi

  if git diff --name-only "$range" | grep -q "^api/"; then
    check_api=true
  fi
  if git diff --name-only "$range" | grep -q "^ui/"; then
    check_ui=true
  fi

done

if [[ -n "$check_api" ]]; then
  cd "$(git rev-parse --show-toplevel)/api"
  echo "Running API lint checks..."
  if ! npm run lint; then
    echoerr "Lint checks failed. Please fix the issues before pushing."
    exit 1
  fi

  if ! npm run check-types; then
    echoerr "Type checks failed. Please fix the issues before pushing."
    exit 1
  fi
fi

if [[ -n "$check_ui" ]]; then
  cd "$(git rev-parse --show-toplevel)/ui"
  echo "Running UI lint checks..."
  if ! npm run lint; then
    echoerr "Lint checks failed. Please fix the issues before pushing."
    exit 1
  fi

  if ! npm run check-types; then
    echoerr "Type checks failed. Please fix the issues before pushing."
    exit 1
  fi
fi

exit 0

