[core]
	excludesfile = /Users/ponti/.gitignore_global
	editor = nvim
[user]
  name = Damien Pontifex
  email = damien.pontifex@gmail.com
[alias]
  graph-log = log --oneline --decorate --graph --all
  lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(green)<%an>%Creset' --abbrev-commit --all --decorate
  # main is normally the common parent, so squash back until common ancestor
  squash = "!f() { git rebase --interactive $(git merge-base --fork-point HEAD ${1:-main}); }; f"
  # Rebase branch back onto main off of original base $1
  rb-onto = "!f() { git rebase --onto ${2:-origin/main} $(git merge-base --fork-point $1 HEAD) HEAD }; f"
  # Delete any branches where the tracking remote has been deleted
  clean-gone = "!f() { git fetch --prune && for branch in $(git branch -vv | grep ': gone]' | awk '{print $1}'); do git branch -D $branch; done }; f"
[push]
  default = current
[fetch]
  prune = true
[pull]
  rebase = true
[rebase]
  autostash = true
[init]
  defaultBranch = main

# Use NeoVim diff as diff tool
[merge]
  tool = vimdiff
[mergetool]
  prompt = true
[mergetool "vimdiff"]
  cmd = nvim -d $LOCAL $REMOTE $MERGED -c '$wincmd w' -c 'wincmd J'
[difftool]
  prompt = false
[diff]
  tool = vimdiff
[pager]
	branch = false
[credential]
	helper = osxkeychain
[submodule]
	recurse = true
	fetchJobs = 8
[http]
	cookiefile = /Users/ponti/.gitcookies

[includeIf "gitdir:~/purple/woodside/"]
  path = ~/purple/woodside/.gitconfig
# [includeIf "gitdir:~/purple/"]
#   path = ~/purple/.gitconfig
# [includeIf "gitdir:~/developer/"]
#   path = ~/developer/.gitconfig

